package com.example.bootydex.fragments.update

import android.app.Activity
import android.app.AlertDialog
import android.content.Intent
import android.graphics.Bitmap
import android.graphics.drawable.BitmapDrawable
import android.net.Uri
import android.os.Bundle
import android.text.TextUtils
import android.view.*
import androidx.fragment.app.Fragment
import android.widget.Toast
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.fragment.findNavController
import androidx.navigation.fragment.navArgs
import coil.ImageLoader
import coil.request.ImageRequest
import coil.request.SuccessResult
import com.example.bootydex.R
import com.example.bootydex.model.Address
import com.example.bootydex.model.BootyCall
import com.example.bootydex.viewmodel.BootyCallViewModel
import kotlinx.android.synthetic.main.fragment_update.*
import kotlinx.android.synthetic.main.fragment_update.view.*


private val GALLERY_REQUEST: Int = 9
/**
 * A simple [Fragment] subclass.
 * Use the [UpdateFragment.newInstance] factory method to
 * create an instance of this fragment.
 */
class UpdateFragment : Fragment() {

    //class autogenerated when creating argument for fragment
    private val args by navArgs<UpdateFragmentArgs>()
    private lateinit var imageUri : Uri
    private lateinit var mBootyCallViewModel: BootyCallViewModel
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Inflate the layout for this fragment
        val view = inflater.inflate(R.layout.fragment_update, container, false)

        mBootyCallViewModel = ViewModelProvider(this).get(BootyCallViewModel::class.java)
        imageUri = Uri.parse(args.currentBooty.image)
        view.etUpdateName.setText(args.currentBooty.firstName)
        view.etUpdateLastName.setText(args.currentBooty.lastName)
        view.etUpdateAge.setText(args.currentBooty.age.toString())
        view.etUpdatePhoneNumber.setText(args.currentBooty.phoneNumber)
        view.etUpdateAddressName.setText(args.currentBooty.address?.streetAddress)
        view.etUpdateAptNumber.setText(args.currentBooty.address?.apartmentNumber.toString())
        view.ivUpdateBoot.apply {
            setImageURI(Uri.parse(args.currentBooty.image))
            setOnClickListener { getImageUpdateFromGallery() }
        }
//        lifecycleScope.launch {
//            view.ivBoot.background = BitmapDrawable(updateBitmap())
//        }
        view.buttonUpdate.setOnClickListener {
//            lifecycleScope.launch {
                updateItem()
//            }
        }

        //Add menu to this fragment only
        setHasOptionsMenu(true)
        return view
    }

    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
        inflater.inflate(R.menu.delete_menu, menu)
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        if(item.itemId == R.id.menu_delete) deleteBootyCall()
        return super.onOptionsItemSelected(item)
    }

    private fun deleteBootyCall() {
        val builder = AlertDialog.Builder(requireContext())
        builder.setPositiveButton("yes"){ _ , _ ->
            mBootyCallViewModel.deleteBootyCall(args.currentBooty)
            Toast.makeText(requireContext(), "Successfully removed", Toast.LENGTH_SHORT).show()
            findNavController().navigate(R.id.action_updateFragment_to_listFragment)
        }
        builder.setNegativeButton("No"){_ , _ ->
        }
        builder.setTitle("Delete ${args.currentBooty.firstName}")

        builder.setMessage("Are you sure you want to delete BootyCall number: ${args.currentBooty.id}")
        builder.create().show()
    }

    private fun updateItem(){
        val firstName = etUpdateName.text.toString()
        val lastName = etUpdateLastName.text.toString()
        val age = Integer.parseInt(etUpdateAge.text.toString())
        val phoneNumber = etUpdatePhoneNumber.text.toString()
        val aptNumber = etUpdateAptNumber.text.toString()
        val streetAddress = etUpdateAddressName.text.toString()
        val address = Address(streetAddress, aptNumber)
        if(inputCheck(firstName, lastName, age.toString(), phoneNumber)){
            //create booty object
            val updatedUser = BootyCall(args.currentBooty.id,firstName, lastName, age, phoneNumber, address, imageUri.toString())
            //Update current booty
            mBootyCallViewModel.updateBootyCall(updatedUser)
            Toast.makeText(requireContext(), "Updated Successfully", Toast.LENGTH_SHORT).show()
            //Nav back to List
            val action = UpdateFragmentDirections.actionUpdateFragmentToDetailFragment(updatedUser)
            findNavController().navigate(action)
        }else{
            Toast.makeText(requireContext(), "Bitch fill everything", Toast.LENGTH_SHORT).show()

        }
    }

    private fun inputCheck(firstName : String, lastName : String, age : String, number : String) : Boolean{
        return (firstName.isNotEmpty() && lastName.isNotEmpty() && age.isNotEmpty() && !TextUtils.isEmpty(age))
    }

    private suspend fun updateBitmap() : Bitmap {
        val loading = ImageLoader(requireContext())
        val request = ImageRequest.Builder(requireContext())
            .data("https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/batman_hero_avatar_comics-512.png")
            .build()
        val result = (loading.execute(request) as SuccessResult).drawable
        return (result as BitmapDrawable).bitmap

    }

    //open Phone Gallery
    private fun getImageUpdateFromGallery(){
        val intent = Intent()
        intent.action = Intent.ACTION_OPEN_DOCUMENT
        intent.type = "image/*"
        intent.addFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION)
        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)
        startActivityForResult(intent, GALLERY_REQUEST)
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)
        if(requestCode == GALLERY_REQUEST && resultCode == Activity.RESULT_OK && data != null){
            imageUri = data.data!!
            ivUpdateBoot.setImageURI(imageUri)
        }
    }
}